import os
import imagehash
from PIL import Image
from collections import defaultdict
from itertools import combinations

# Folder with your images
FOLDER = "."

# How similar images need to be to be considered duplicates
# 0 = identical, 5 = small differences allowed, 10 = very loose
THRESHOLD = 5

# Collect image hashes
print("Hashing images...")
image_hashes = {}
for filename in os.listdir(FOLDER):
    if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.webp')):
        path = os.path.join(FOLDER, filename)
        try:
            with Image.open(path) as img:
                image_hashes[filename] = imagehash.phash(img)
        except Exception as e:
            print(f"Skipping {filename}: {e}")

# Group similar images
print("Comparing hashes...")
groups = []
used = set()

for a, b in combinations(image_hashes.keys(), 2):
    if a not in used and b not in used:
        diff = image_hashes[a] - image_hashes[b]
        if diff <= THRESHOLD:
            # Find existing group this belongs to
            found = False
            for g in groups:
                if a in g or b in g:
                    g.update([a, b])
                    found = True
                    break
            if not found:
                groups.append(set([a, b]))
            used.update([a, b])

# Print groups
print("\nFound groups of similar images:")
for i, g in enumerate(groups, 1):
    print(f"Group {i}: {', '.join(sorted(g))}")

if not groups:
    print("No near-duplicates found.")
